import telebot
from telebot import types
import random
import threading

keys = {}

db_lock = threading.Lock()

ADMIN_ID = '–¢–≤–æ–π –∞–¥–º–∏–Ω –∞–π–¥–∏'

def save_key(key, links):
    with db_lock:
        with open('keys.txt', 'a') as file:
            file.write(f"{key}:{links}\n")

TOKEN = '–¢–æ–∫–µ–Ω –±–æ—Ç–∞'
bot = telebot.TeleBot(TOKEN)

with open('keys.txt', 'a+') as file:
    pass

def load_keys():
    keys = {}
    with open('keys.txt', 'r') as file:
        for line in file:
            key, links = line.strip().split(':')
            keys[key] = links.split(',') if links else None
    return keys

keys = load_keys()

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('‚Ñπ–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á?')
    markup.add('üíå–î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä')
    markup.add('üìã–û—Ç–∑—ã–≤—ã')
    if message.from_user.id == ADMIN_ID:
        markup.add('/g_key')
        markup.add('/add')
    bot.send_message(message.chat.id, '–ô–æ—É whats up, —Ç—ã –ø–æ–ø–∞–ª –≤ ...., –ø—Ä–æ—Å—Ç–æ —Å–∫–∏–Ω—å –º–Ω–µ –∫–ª—é—á –∏ –ø–æ–ª—É—á–∏ —Ñ–∞–π–ª...', reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '‚Ñπ–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á?')
def get_admin_contacts(message):
    bot.send_message(message.chat.id, '‚òé –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –Ω–∞–ø–∏—à–∏ –æ–¥–Ω–æ–º—É –∏–∑ –∞–¥–º–∏–Ω–æ–≤: @Vrednij_OVH....')

@bot.message_handler(func=lambda message: message.text == 'üíå–î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä')
def get_discord_server(message):
    bot.send_message(message.chat.id, 'üîÑ –°—Å—ã–ª–∫–∞ –Ω–∞ –¥–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä: https://discord.gg/')

@bot.message_handler(func=lambda message: message.text == 'üìã–û—Ç–∑—ã–≤—ã')
def get_reviews(message):
    bot.send_message(message.chat.id, 'üè∑ –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª —Å –æ—Ç–∑—ã–≤–∞–º–∏: https://t.me/')

@bot.message_handler(commands=['g_key'])
def generate_key(message):
    if message.from_user.id == ADMIN_ID:
        key = ''.join(random.choice('0123456789ABCDEF') for _ in range(12))
        links = None
        keys[key] = links
        save_key(key, None)
        bot.send_message(message.chat.id, f'üîë –í–æ—Ç –∫–ª—é—á: {key}')
    else:
        bot.send_message(message.chat.id, '‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.')

@bot.message_handler(commands=['add'])
def add_link(message):
    args = message.text.split()
    if len(args) != 3:
        bot.send_message(message.chat.id, '‚ùå –ù–µ–≤–µ—Ä–Ω–æ –Ω–∞–ø–∏—Å–∞–ª –¥–µ–±–∏–ª, –ø–æ–ø—Ä–æ–±—É–π —Ç–∞–∫: /add –∫–ª—é—á —Å—Å—ã–ª–∫–∞')
        return
    key = args[1]
    link = args[2]
    if key in keys:
        if keys[key] is not None:
            bot.send_message(message.chat.id, f'‚ôª –ö–ª—é—á {key} —É–∂–µ –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω.')
        else:
            keys[key] = link
            save_key(key, link)
            bot.send_message(message.chat.id, f'‚úÖ –°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫ –∫–ª—é—á—É {key}.')
    else:
        bot.send_message(message.chat.id, f'‚ùå –ö–ª—é—á {key} –Ω–µ –Ω–∞–π–¥–µ–Ω.')


@bot.message_handler(func=lambda message: True)
def get_links(message):
    key = message.text
    if key in keys:
        if keys[key] is not None:
            bot.send_message(message.chat.id, f'üìã –°—Å—ã–ª–∫–∞ –¥–ª—è –∫–ª—é—á–∞ {key}:')
            bot.send_message(message.chat.id, keys[key])
            keys[key] = None
        else:
            bot.send_message(message.chat.id, f'‚ùå –ö–ª—é—á –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω!')
    else:
        bot.send_message(message.chat.id, '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')

bot.polling(none_stop=True)

